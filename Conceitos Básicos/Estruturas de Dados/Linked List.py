'''
UMA LINKED LIST EM PYTHON É UMA COLEÇÃO DE ELEMENTOS LINEARES, COMO UMA LISTA COMUM, MAS EM QUE CADA ELEMENTO APONTA PARA O PRÓXIMO ELEMENTO DA MEMÓRIA. CADA ELEMENTO DA LINKED LIST
É CHAMADO DE NODE E POSSUI DUAS PARTES:

DATA -> OS DADOS PROPRIAMENTE DITOS DAQUELE ELEMENTO
NODE -> REFERÊNCIA DO PRÓXIMO NODE NA SEQUÊNCIA. NO CASO DO ÚLTIMO ELEMENTO, O NODE SERÁ NULL

O PRIMEIRO E ÚLTIMO NODE DA LISTA SÃO CHAMADOS, RESPECTIVAMENTE, DE HEAD E TAIL

SE TRATANDO DE QUEUS(FIRST IN, FIRST OUT) E STACKS(LAST IN, FIRST OUT), LINKED LISTS SÃO MUITO BOAS PARA SEREM USADAS, VISTO QUE POSSUEM MELHOR PERFORMANCE QUANDO SE TRATA DE REMOVER
OU INSERIR DADOS.
JÁ PARA ACESSAR UM ELEMENTO NA LINKED LIST NÃO GARANTE UMA PERFORMANCE MUITO BOA, JÁ QUE NÃO HÁ ÍNDICES PARA OS NODES, PORTANTO A LISTA DEVERÁ SER ITERADA ATÉ ENCONTRAR O ELEMENTO
'''
from collections import deque #OBJETO QUE PERMITE USAR LINKED LISTS, CHAMADAS 'DEQUE', NESSE CASO

#QUEUE (FIFO) -> COMO UMA FILA DE RESTAURANTE, O PRIMEIRO A CHEGAR É O PRIMEIRO A SAIR
queue = deque()

queue.append("Mary")
queue.append("John")
queue.append("Susan")
print(queue)

queue.popleft()
queue.popleft()
print(queue)

#STACK (LIFO) -> COMO NO HISTÓRICO DE UM BROWSER, O ÚLTIMO A CHEGAR É O PRIMEIRO A SAIR
history = deque()

history.appendleft("https://realpython.com/")
history.appendleft("https://realpython.com/pandas-read-write-files/")
history.appendleft("https://realpython.com/python-csv/")
print(history)

history.popleft()
history.popleft()
print(history)