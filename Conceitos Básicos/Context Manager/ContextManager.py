'''
CONTEXT MANAGER É UMA FORMA DE ALOCAR E LIBERAR RECURSOS PRECISAMENTE QUANDO NECESSÁRIO. A FORMA MAIS COMUM DE FAZER ESSE PROCESSO É USANDO 'WITH'. VEJA UM EXEMPLO A SEGUIR:
'''
# with open('Teste.txt', 'w') as arquivo:
#     arquivo.write('Teste 1 2 3')
'''
EXECUTANDO O CÓDIGO ACIMA, É GERADO, OU ABERTO, UM ARQUIVO DE TEXTO COM O NOME 'Teste.txt' E ESCRITO NELE A FRASE 'Teste 1 2 3. POR TRÁS DOS PANOS, O CÓDIGO AGE DA SEGUINTE FORMA:
'''
arquivo = open('Teste.txt', 'w')

try:
    arquivo.write('Teste 1 2 3')
except Exception as e:
    print(f'Foi encontrando o seguinte erro na execução do código: {e}')
finally:
    arquivo.close()
'''
AMBOS OS CÓDIGOS FAZEM A MESMA COISA, MAS O SEGUNDO DEIXA MAIS CLARO O OBJETIVO DE UM CONTEXT MANAGER. IMAGINA QUE DURANTE A GRAVAÇÃO DO ARQUIVO DE TEXTO OCORRESSE UM ERRO, E, NESSA
SITUAÇÃO, NÃO HOUVESSE A CLÁUSULA 'TRY...EXCEPT...FINALLY'. O ARQUIVO PERMANECERIA ABERTO E OCUPANDO ESPAÇO NA MEMÓRIA DURANTE A EXECUÇÃO DO CÓDIGO, O QUE PODE IR GRADATIVAMENTE 
DIMINUIR O DESEMPENHO DO COMPUTADOR. O CONTEXT MANAGER JUSTAMENTE VISA GARANTIR QUE AQUELE ARQUIVO, NESSE CONTEXTO, SEJA ABERTO, O PROCESSO NECESSÁRIO SEJA EXECUTADO, E POSTERIORMENTE
O ARQUIVO É FECHADO
'''